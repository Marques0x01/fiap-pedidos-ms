name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  TF_ACTION_WORKING_DIR: "infra"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          cd app
          npm install

  Tests:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          cd app
          npm install
      - name: Run tests
        run: |
          cd app
          npm test

  Sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Install dependencies
        run: |
          cd app
          npm install
      - name: Test and coverage
        run: |
          cd app
          npm test 
      - name: SonarQube Scan
        with:
          projectBaseDir: app/src
          args: >
            -Dsonar.typescript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.verbose=true
            -Dsonar.projectKey=Marques0x01_fiap-pedidos-ms
            -Dsonar.organization=marques0x01
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        with:
          scanMetadataReportFile: src/.scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Publish:
    needs: Sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          cd app
          npm install
      - name: Terraform init
        run: |
          cd infra
          terraform init
      - name: Terraform plan
        run: |
          cd infra
          terraform plan
      - name: Terraform apply
        run: |
          cd infra
          terraform apply -auto-approve
